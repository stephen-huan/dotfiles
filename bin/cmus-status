#!/usr/bin/env python3
import subprocess
"""
Little script to format cmus-remote --raw status
"""

def get_cmus() -> str:
    """ Gets cmus's output. """
    out = subprocess.run(["cmus-remote", "--raw", "status"],
                         capture_output=True, text=True)
    return out.stdout

def fmt_time(s: str) -> str:
    """ Formats a integer to a MM:SS string. """
    s = int(s)
    return f"{s//60:02}:{s % 60:02}"

if __name__ == "__main__":
    info = {}
    for line in get_cmus().split("\n"):
        tokens = line.split()
        if len(tokens) > 0:
            if tokens[0] in {"tag", "set"}:
                tokens = tokens[1:] # remove unecessary tokens
            info[tokens[0]] = " ".join(tokens[1:])

    if "status" in info:
        if info["status"] == "stopped":
            print("cmus stopped")
        else:
            print(f"{info.get('artist', info['albumartist'])} - \
{info['album']} - \
{info['tracknumber'].lstrip('0')}. {info['title']}        \
{'>' if info['status'] == 'playing' else '|'} \
{fmt_time(info['position'])} / {fmt_time(info['duration'])}")
    else:
        print("cmus inactive")

