#!/bin/bash

# toggles the yabai menu bar

YABAI_SCRIPTS="$HOME/Programs/bin/yabai"

# run as get_icon state icon_if_off icon_if_on
# reversed becauase state read in is actually the *next* state
function get_icon
{
  if [ "$1" = "true" ]; then
    echo $2
  else
    echo $3
  fi
}

# return the number of spaces
function get_spaces
{
  printf '%0.s ' $(seq 1 $1)
}

# change spacing based off monitor resolution
# desktop width
if [ "$(env HOME=/tmp fish $YABAI_SCRIPTS/resolution.fish)" -eq 1920 ]; then
  spaces=420
  espace=12
  factor=8
# assume laptop
else
  spaces=10
  espace=3
  factor=8
fi
gap="$(get_spaces $espace)"

# read in the states from right to left
read -r state1<$YABAI_SCRIPTS/caffine.state
read -r state2<$YABAI_SCRIPTS/flux.state
read -r state3<$YABAI_SCRIPTS/zap.state
read -r state4<$YABAI_SCRIPTS/anime.state

nums="678910"
cmus_status="$($HOME/Programs/bin/cmus-status)"
icons="$cmus_status$gap$(get_icon $state2  )$gap$(get_icon $state1  )"

# add spacing factor in order to prevent icons from shifting left
# compute spacing based off number of spaces and length of icon bar
num="$(yabai -m query --spaces | jq length)"
len1="$(echo $icons | LANG=en_US.UTF-8 wc -m)" # bytes
len2="$(echo $icons | LANG=en_US.UTF-8 wc -c)" # characters
spaces="$(get_spaces $(echo "$spaces - $factor*$num - $espace - 0.9*($len1 + $len2)" | bc -l))"
icons="$spaces$icons"

# replace last desktop with icons
comb="${nums//$num/$icons}"

# split escape seperated string into an array
IFS='' read -r -a array <<< "$comb"
# unpack array into arguments
spacebar -m config space_icon_strip "${array[@]}"

